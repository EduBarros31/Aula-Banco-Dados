-- --crIando um banco de dados(database),

-- CREATE TABLE IF NOT EXISTS PRODUTO(
-- ID int PRIMARY KEY,
-- COD VARCHAR(4) NOT NULL UNIQUE,

-- NOME VARCHAR(100) NOT NULL,
-- PRECO REAL CHECK(PRECO>0)



-- );
-- --\dt;
-- \d PRODUTO;

-- --DELETANDO UMA BASE DE DADOS
-- --DROP DATABASE AULA0312,
-- DROP TABLE PRODUTO;
-- \dt



-- criando uma tabela
-- PROFESSOR(id, nome, cof)
--turma 9id, numero, duracao_dias)


CREATE TABLE PROFESSOR (
id int PRIMARY KEY,
COD VARCHAR(100),
NOME VARCHAR(100) NOT NULL,
CPF CHAR(11) NOT NULL UNIQUE

);
CREATE TABLE TURMA(
id int ,
NUMERO_TURMA int not null unique,
DURACAO_DIAS VARCHAR(4),

PRIMARY KEY(id, numero_turma)


);

\dt
\d TURMA

CREATE TABLE IF NOT EXISTS FORNECEDOR(
ID INT PRIMARY KEY,
NOME_FORNECEDOR VARCHAR (100) NOT NULL,
CIDADE VARCHAR(100)


);

CREATE TABLE PECA(
ID INT PRIMARY KEY,

NOME_PECA VARCHAR(100) NOT NULL,
DESCRICAO TEXT




);

CREATE TABLE VENDA (
ID INT PRIMARY KEY,
ID_FORNECEDOR INT,
ID_PECA INT,

NOME_VENDA VARCHAR(100) NOT NULL,
DATA date,
QUANTIDADE INT,


 CONSTRAINT fk_FORNECEDOR FOREIGN KEY(ID_FORNECEDOR) REFERENCES FORNECEDOR(ID),
 CONSTRAINT fk_PECA FOREIGN KEY(ID_PECA) REFERENCES PECA(ID)







);


-- \dt
-- \d FORNECEDOR
-- \d PECA
-- \d venda


ALTER TABLE FORNECEDOR ADD TELEFONE CHAR (10);
\d FORNECEDOR
ALTER TABLE PECA ADD PRECO REAL;
\d PECA
ALTER TABLE FORNECEDOR DROP CIDADE ;
 \d FORNECEDOR



--  AULA 04/12



create table IF NOT EXISTS usuario(
id SERIAL primary key,
nome_USUARIO varchar(100) not null,
email varchar(100) not null unique,

data_CADASTRO TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP



);

CREATE TABLE IF NOT EXISTS EDITORA(
ID SERIAL PRIMARY KEY,
NOME_EDITORA CHAR(100)NOT NULL UNIQUE


);

CREATE TABLE IF NOT EXISTS GENERO(
ID SERIAL PRIMARY KEY,
NOME_GENERO CHAR(100)NOT NULL UNIQUE


);

create table IF NOT EXISTS LIVRO(
id serial primary key,
id_editora INT NOT NULL,
id_genero INT NOT NULL,
titulo varchar(100) not null,
QUANTIDADE INT NOT NULL CHECK (QUANTIDADE >= 0),

CONSTRAINT fk_editora foreign key(ID_editora)  REFERENCES editora(ID) ON DELETE CASCADE,
CONSTRAINT fk_GENERO FOREIGN KEY(ID_GENERO) REFERENCES GENERO(ID) ON DELETE CASCADE 


);

CREATE TABLE EMPRESTIMO(
ID SERIAL PRIMARY KEY,
ID_LIVRO INT,
ID_USUARIO INT,
ID_GENERO INT,
DATA_INICIO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
DATA_FIM TIMESTAMP  NOT NULL,


CONSTRAINT fk_LIVRO FOREIGN KEY(ID_LIVRO) REFERENCES LIVRO(ID),
CONSTRAINT CHECK_DATA_INICIO_FIM CHECK(DATA_INICIO < DATA_FIM),
CONSTRAINT fk_GENERO FOREIGN KEY(ID_GENERO) REFERENCES GENERO(ID)
 

);
\d usuario
-- ADICIONAR O TELEFONE A UM USUARIO
ALTER TABLE USUARIO ADD TELEFONE CHAR(11) DEFAULT 'nenhum';
--ALTERAR UM TITULO A TABELA
ALTER TABLE LIVRO ALTER COLUMN TITULO TYPE VARCHAR(200);
\d livro
-- APAGAR O CAMPO CADASTRO
ALTER TABLE USUARIO DROP DATA_CADASTRO;
\d usuario
-- UNIFICAR UM LIVRO PARA EDITORA
\d livro
ALTER TABLE LIVRO ADD CONSTRAINT uq_livro_titulo_editora UNIQUE(titulo, id_editora);
\d livro
--garantir que AS DATAS DE EMPRESTIMO E DEVOLUCAO SEJAM DISTINTAS E VALIDA
ALTER TABLE EMPRESTIMO ADD CONSTRAINT chk_data_fim CHECK(data_fim >= data_inicio);
\d emprestimo

--INSERIR DADOS A UM CAMPO DE TABELA
INSERT INTO USUARIO(id, nome_usuario, email, telefone)
VALUES(1, 'vALTEMIR', 'valtemir@senac', '4444-4444'), (2, 'valtemir jr', 'valtemir@senac.br', '');
VALUES(1, 'vALTEMIR', 'valtemir@senac', '4444-4444'), (2, 'valtemir jr', 'valtemir@senac.br', '');

SELECT *FROM USUARIO;
--
\d usuario




-- AULA DIA 04/12